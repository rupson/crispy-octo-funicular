[{"/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/index.tsx":"1","/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/reportWebVitals.ts":"2","/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/App.tsx":"3","/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/context/featureToggles.tsx":"4","/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/MyComponent.tsx":"5","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/index.tsx":"6","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/reportWebVitals.ts":"7","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/App.tsx":"8","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/context/featureToggles.tsx":"9","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/ToggledComponent.tsx":"10","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/context/userContext.tsx":"11"},{"size":500,"mtime":1611929441372,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611929441373,"results":"14","hashOfConfig":"13"},{"size":789,"mtime":1611944235025,"results":"15","hashOfConfig":"13"},{"size":1257,"mtime":1611943443030,"results":"16","hashOfConfig":"13"},{"size":597,"mtime":1611944132866,"results":"17","hashOfConfig":"13"},{"size":500,"mtime":1611945169261,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1611945169263,"results":"20","hashOfConfig":"19"},{"size":1600,"mtime":1612185103369,"results":"21","hashOfConfig":"19"},{"size":1396,"mtime":1612184112977,"results":"22","hashOfConfig":"19"},{"size":609,"mtime":1612184742411,"results":"23","hashOfConfig":"19"},{"size":553,"mtime":1612184491673,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"l7e3sq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1gtqfm9",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/index.tsx",[],["52","53"],"/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/reportWebVitals.ts",[],"/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/App.tsx",[],"/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/context/featureToggles.tsx",[],["54","55"],"/Users/r.upson/Documents/GitHub/unleashed-client-app/my-app/src/MyComponent.tsx",[],"/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/index.tsx",[],["56","57"],"/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/reportWebVitals.ts",[],"/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/App.tsx",[],"/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/context/featureToggles.tsx",["58"],"import React from 'react'\nimport axios from 'axios'\nimport { UserContext } from './userContext'\n\ninterface FeatureToggle {\n    name: string\n    enabled: boolean\n}\n\ntype FeatureToggleContextType = FeatureToggle[]\n\nexport const FeatureToggleContext = React.createContext<FeatureToggleContextType>([])\n\n\nconst fetchToggles: (userId: string) => Promise<FeatureToggleContextType> = async (userId) => {\n    return (await axios.get(`/feature-toggles?userId=${userId}`)).data\n}\n\nconst FeatureToggleProvider: React.FC<{}> = ({children}) => {\n    const [shouldFetchToggles, setShouldFetchToggles] = React.useState(false)\n    const [toggles, setToggles] = React.useState<FeatureToggleContextType>([])\n\n    const {userId} = React.useContext(UserContext)\n\n    React.useEffect( () => {\n        const pollToggleInterval = setInterval( () => {\n            console.log(`context::interval>> POLLING!!`)\n            setShouldFetchToggles(shouldFetchToggles => !shouldFetchToggles)\n        }, 1000)\n        return () => clearInterval(pollToggleInterval)\n    }, [])\n\n    React.useEffect( () => {\n        console.log(`toggles have changed: `, toggles)\n    }, [toggles])\n\n    React.useEffect( () => {\n        fetchToggles(userId).then(setToggles)\n\n    }, [shouldFetchToggles])\n\n    return <FeatureToggleContext.Provider value={toggles}>{children}</FeatureToggleContext.Provider>\n}\n\nexport default FeatureToggleProvider\n","/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/ToggledComponent.tsx",[],"/Users/r.upson/Documents/GitHub/crispy-octo-funicular/src/context/userContext.tsx",[],["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"61","replacedBy":"67"},{"ruleId":"63","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":40,"column":8,"nodeType":"71","endLine":40,"endColumn":28,"suggestions":"72"},{"ruleId":"61","replacedBy":"73"},{"ruleId":"63","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],["75"],["76"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["77"],["75"],["76"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [shouldFetchToggles, userId]",{"range":"80","text":"81"},[1232,1252],"[shouldFetchToggles, userId]"]